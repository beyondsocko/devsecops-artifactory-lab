name: Test Pipeline

on:
  workflow_dispatch:
  push:
    paths:
    - 'src/**'
    - 'scripts/**'
    - '.github/workflows/**'

jobs:
  test-security-pipeline:
    name: Test Security Pipeline
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Setup Environment
      run: |
        # Install required tools
        sudo apt-get update
        sudo apt-get install -y jq curl
        
        # Create required directories
        mkdir -p scan-results logs/audit reports
        
    - name: Test Policy Gate Scripts
      run: |
        # Make scripts executable
        chmod +x scripts/security/*.sh
        
        # Test with mock data
        echo "Testing policy gate functionality..."
        
        # Create mock scan results
        mkdir -p test/fixtures
        cat > scan-results/trivy-results.json << 'EOJ'
{
  "SchemaVersion": 2,
  "ArtifactName": "test-app:latest",
  "Results": [
    {
      "Vulnerabilities": [
        {"Severity": "LOW", "VulnerabilityID": "CVE-2023-0001"}
      ]
    }
  ]
}
EOJ
        
        # Run policy gate (should pass with only LOW severity)
        if scripts/security/policy-gate.sh -s trivy; then
          echo "✅ Policy gate test PASSED"
        else
          echo "❌ Policy gate test FAILED"
          exit 1
        fi
        
    - name: Validate Project Structure
      run: |
        echo "Validating project structure..."
        
        required_files=(
          "src/package.json"
          "src/Dockerfile"
          "scripts/security/scan.sh"
          "scripts/security/policy-gate.sh"
          "scripts/security/integrate-gate.sh"
          ".env"
        )
        
        for file in "${required_files[@]}"; do
          if [ -f "${file}" ]; then
            echo "✅ ${file}: Present"
          else
            echo "❌ ${file}: Missing"
            exit 1
          fi
        done
        
        echo "All required files present!"
